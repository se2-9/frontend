name: Deploy Next.js Frontend to EC2

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            --build-arg NEXT_PUBLIC_OMISE_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_OMISE_PUBLIC_KEY }} \
            --build-arg NEXT_PUBLIC_OMISE_SECRET_KEY=${{ secrets.NEXT_PUBLIC_OMISE_SECRET_KEY }} \
            --build-arg NEXT_PUBLIC_OMISE_API_VERSION=${{ secrets.NEXT_PUBLIC_OMISE_API_VERSION }} \
            -t ghcr.io/${{ github.repository }}:latest .
          docker push ghcr.io/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]

    steps:
      - uses: actions/checkout@v4
      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }} # EC2 host
          username: ${{ secrets.USER }} # EC2 user
          key: ${{ secrets.PRIVATE_KEY }} # EC2 private key
          source: docker-compose.yml
          target: '~'
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            echo "${{ secrets.ENV }}" > .env
            export ENV_FILE=.env
            echo "IMAGE_NAME=ghcr.io/${{ github.repository }}:latest" >> .env
            docker login ghcr.io -u ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d
